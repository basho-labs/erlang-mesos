%%
%% erlang compilation configuration
%%
{erl_first_files, [
    "src/executor.erl","src/scheduler.erl"
]}.

{erl_opts, [debug_info, 
            fail_on_warning, 
            warnings_as_errors
            ]}.

%%
%% eunit configuration
%%

{cover_enabled            , true}.
{cover_print_enabled      , true}.
{eunit_opts, [verbose,
   {report, {eunit_surefire, [{dir, "."}]}}]}.


%%
%% nif compilation configuration
%%



{port_sources, ["c_src/*.c", "c_src/*.cpp"]}.

{port_envs, [
 	{"(linux|solaris)", "LDFLAGS", "$LDFLAGS -lstdc++ /usr/local/lib/libmesos.so"},
	{"CXXFLAGS", "$CXXFLAGS -Wall -O2 -static -std=c++11 -I/usr/local/include -I/usr/local/include/mesos -L/usr/local/lib -L/usr/lib "}]
}.

{port_specs, [{"priv/executor.so", ["c_src/executor.c", "c_src/*.cpp"]},   
              {"priv/scheduler.so", ["c_src/scheduler.c", "c_src/*.cpp"]}
             ]}.

%
% protobuffer compilation configuration
%

{pre_hooks,
 [{compile, "mkdir -p include"}, %% ensure the include dir exists
  {compile,
   "erl +B -noinput -pa /deps/gpb/ebin "
   "    -I`pwd`/proto -o-erl src -o-hrl include -modsuffix _pb -il"
   "    -s gpb_compile c `pwd`/proto/*.proto"
  }]}.

{post_hooks,
 [{clean,
   "bash -c 'for f in proto/*.proto; "
   "do "
   "  rm -f src/$(basename $f .proto).erl; "
   "  rm -f include/$(basename $f .proto).hrl; "
   "done'"}
 ]}.

{deps, [
    {gpb ,  ".*", {git, "git://github.com/tomas-abrahamsson/gpb.git", {tag, "3.17.2"}} },
    {meck, ".*", {git, "https://github.com/eproxus/meck.git", {tag, "0.8.2"}}}
]}.
